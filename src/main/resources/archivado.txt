/*


  @Override
  public void allCalculadora(RoutingContext routingContext) {
    JsonArray arr = new JsonArray();
    userMap.forEach((k, v) -> arr.add(v));
    routingContext
      .response()
      .putHeader("content-type", "application/json")
      .end(arr.encodePrettily());

  }
 */

/*
ffdd





  public Future <Void> handlePostCalculadoraFuture(RoutingContext routingContext) {
    CalculadoraModel calculadoraModel = Json.decodeValue(routingContext.getBodyAsString(), CalculadoraModel.class);

    RouterBuilder.create(MainVerticle.vertx, "src/main/resources/calculos.yaml")
      .onSuccess(routerBuilder -> {
        calculadoraModel.setContext(routerBuilder.getOpenAPI().getOpenAPI());
        addCalculadora(JsonObject.mapFrom(calculadoraModel));

        LG.info("Post : {}", calculadoraModel.toString());
        return (Future)   routingContext.response()
          .setStatusCode(201)
          .putHeader("content-type", "application/json; charset=utf-8")
          .end(Json.encodePrettily(calculadoraModel));

      })
        .onFailure(err -> {
        });

        return routingContext.response()
        .setStatusCode(201)
        .putHeader("content-type", "application/json; charset=utf-8")
        .end(Json.encodePrettily(calculadoraModel));
        }




 */


/*

  @Override
  public void handlePostCalculadora(RoutingContext routingContext) {
    final CalculadoraModel calculos = Json.decodeValue(routingContext.getBodyAsString(),
      CalculadoraModel.class);

    addCalculadora(JsonObject.mapFrom(calculos));
    LG.info("Post : {}", calculos.toString());

    //userMap.put("idUser", JsonObject.mapFrom(user));
    routingContext.response()
      .setStatusCode(201)
      .putHeader("content-type", "application/json; charset=utf-8")
      .end(Json.encodePrettily(calculos));


  }
 */


/*

  @Override
  public void handleGetCalculadora(RoutingContext routingContext) {
    String calculadoraID = routingContext.request().getParam("id");
    HttpServerResponse response = routingContext.response();
    if (calculadoraID == null) {
      sendError(400, response);
    } else {
      JsonObject jsonCalcu = userMap.get(calculadoraID);
      LG.info("Get ID: {}", jsonCalcu.toString());

      if (jsonCalcu == null) {
        sendError(404, response);
      } else {
        response.putHeader("content-type", "application/json")
          .end(jsonCalcu
            .encodePrettily());
      }
    }

  }
 */



 //---------
   <!-- Maven Shade Plugin -->
       <plugin>
         <groupId>org.apache.maven.plugins</groupId>
         <artifactId>maven-shade-plugin</artifactId>
         <version>2.3</version>
         <executions>
           <!-- Run shade goal on package phase -->
           <execution>
             <phase>package</phase>
             <goals>
               <goal>shade</goal>
             </goals>
             <configuration>
               <transformers>
                 <!-- add Main-Class to manifest file -->
                 <transformer
                   implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                   <mainClass>com.oscar.calculos.CalculadoraCuantica.MainVerticle</mainClass>
                 </transformer>
               </transformers>
               <filters>
                 <filter>
                   <artifact>*:*</artifact>
                   <excludes>
                     <exclude>META-INF/*.SF</exclude>
                     <exclude>META-INF/*.DSA</exclude>
                     <exclude>META-INF/*.RSA</exclude>
                   </excludes>
                 </filter>
               </filters>
             </configuration>
           </execution>
         </executions>
       </plugin>




       /*V2

       openapi: 3.0.0
       #-----
       info:
         title: Calculadora
         description: calculos
         version: 1.0.0
         termsOfService: 'http://swagger.io/terms/'
         #-----
         contact:
           email: otabora@outlook.es
         #-----
         license:
           name: Apache 2.0
           url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
         #-----
       servers:
         # Vert.X
         # Added by API Auto Mocking Plugin
         - description: SwaggerHub API Auto Mocking
           url: https://virtserver.swaggerhub.com/Sifponia/UsuaioApi/1.0.0
         - description: Vertx
           url: http://localhost:9090/calculos
         #-----
       tags:
         - name: suma
           description: suma de numero (x) y  (y) ðŸš€
         - name: resta
           description: resta de numero (x) y  (y) ðŸš€
         #-----
       paths:
         /calculos:
           get:
             summary: Lista de calculos
             operationId: listaCalculosId
             tags:
               - calcululos
             responses:
               '200':
                 description: An paged array of pets
                 headers:
                   x-next:
                     description: A link to the next page of responses
                     schema:
                       type: string
                 content:
                   application/json:
                     schema:
                       $ref: '#/components/schemas/Calculadora'
               default:
                 description: unexpected error
                 content:
                   application/json:
                     schema:
                       $ref: '#/components/schemas/Error'
           post:
             summary: recibe dos dos entradas un numero (x) y (y)
             operationId: sumaId
             tags:
               - calculos
             requestBody:
               content:
                 application/json:
                   schema:
                     $ref: '#/components/schemas/Calculadora'
             responses:
               '200':
                 description: Null response
               default:
                 description: unexpected error
                 content:
                   application/json:
                     schema:
                       $ref: '#/components/schemas/Error'
         /calculos/{id}:
           get:
             summary: Devuelve una operacion de la BBDD
             operationId: mostrarPorId
             tags:
               - calculos
             parameters:
               - name: id
                 in: path
                 required: true
                 description: La identificaciÃ³n de la operacion a recuperar.
                 schema:
                   type: number
             responses:
               '200':
                 description: Expected response to a valid request
                 content:
                   application/json:
                     schema:
                       $ref: '#/components/schemas/Calculadora'
               default:
                 description: unexpected error
                 content:
                   application/json:
                     schema:
                       $ref: '#/components/schemas/Error'
         /calculos/{DeleteId}:
           delete:
             summary: Borra una operacion de la calculos
             operationId: borrarPorId
             tags:
               - calculos
             parameters:
               - name: DeleteId
                 in: path
                 required: true
                 description: La identificaciÃ³n de la operacion a recuperar.
                 schema:
                   type: number
             responses:
               '200':
                 description: Expected response to a valid request
                 content:
                   application/json:
                     schema:
                       $ref: '#/components/schemas/Calculadora'
       components:
         schemas:
           Calculadora:
             type: object
             required:
               - numeroOne
               - numerTwo
             properties:
               id:
                 type: integer
                 format: int64
                 description: Id de identificaciÃ³n
               x:
                 type: number
                 description: Recibe un primer numero
               y:
                 type: number
                 description: Recibe un segundo numero
               result:
                 type: number
                 description: Guarda el resultado de la operacion
           Error:
             type: object
             required:
               - id
               - result
             properties:
               id:
                 type: integer
                 format: int32
               result:
                 type: number





       */END V2



       /*



       openapi: 3.0.0
       #-----
       info:
         title: Calculadora
         description: calculos
         version: 1.0.0
         termsOfService: 'http://swagger.io/terms/'
         #-----
         contact:
           email: otabora@outlook.es
         #-----
         license:
           name: Apache 2.0
           url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
         #-----
       servers:
         # Vert.X
         # Added by API Auto Mocking Plugin
         - description: SwaggerHub API Auto Mocking
           url: https://virtserver.swaggerhub.com/Sifponia/UsuaioApi/1.0.0
         - description: Vertx
           url: http://localhost:9090/calculos
         #-----
       tags:
         - name: Calculadora
           description: Calculadora
         #-----
       paths:
         '/calculos':
           get:
             summary: Lista de calculos
             operationId: listaCalculosId
             tags:
               - Calculadora
             responses:
               '200':
                 description: Lista de calculos
                 headers:
                   x-next:
                     description: A link to the next page of responses
                     schema:
                       type: string
                 content:
                   application/json:
                     schema:
                       $ref: '#/components/schemas/Calculadora'
               "400":
                 description: Bad Request
               "401":
                 description: Unauthorized
               "403":
                 description: Forbidden
               "500":
                 description: Internal Sever Error

         '/suma':
           post:
             summary: recibe dos dos entradas un numero (x) y (y)
             operationId: sumaId
             parameters:
               - in: query
                 name: x
                 description: number
                 required: true
                 schema:
                   type: number
               - in: query
                 name: y
                 description: x
                 required: true
                 schema:
                   type: number
             tags:
               - Calculadora
             requestBody:
               content:
                 application/json:
                   schema:
                     $ref: '#/components/schemas/Resultado'
             responses:
               '200':
                 description: Successful operation
                 content:
                   application/json:
                     schema:
                       $ref: '#/components/schemas/Resultado'

               '404':
                 description: Failed. Request not found
               '405':
                 description: Failed. Method Not Allowed

         '/resta':
           post:
             summary: recibe dos dos entradas un numero (x) y (y)
             operationId: restaId
             parameters:
               - in: query
                 name: x
                 description: number
                 required: true
                 schema:
                   type: number
               - in: query
                 name: y
                 description: x
                 required: true
                 schema:
                   type: number
             tags:
               - Calculadora
             requestBody:
               content:
                 application/json:
                   schema:
                     $ref: '#/components/schemas/Resultado'
             responses:
               '200':
                 description: Successful operation
                 content:
                   application/json:
                     schema:
                       $ref: '#/components/schemas/Resultado'

               '404':
                 description: Failed. Request not found
               '405':
                 description: Failed. Method Not Allowed

         '/calculos/{id}':
           get:
             summary: Devuelve una operacion de la BBDD
             operationId: mostrarPorId
             parameters:
               - name: id
                 in: path
                 required: true
                 description: La identificaciÃ³n de la operacion a recuperar.
                 schema:
                   type: number
             responses:
               '200':
                 description: Expected response to a valid request
                 content:
                   application/json:
                     schema:
                       $ref: '#/components/schemas/Calculadora'
               default:
                 description: unexpected error
                 content:
                   application/json:
                     schema:
                       $ref: '#/components/schemas/Error'
       components:
         schemas:
           Calculadora:
             type: object
             required:
               - numeroOne
               - numerTwo
             properties:
               id:
                 type: integer
                 format: int64
                 description: Id de identificaciÃ³n
               x:
                 type: number
                 description: Recibe un primer numero
               y:
                 type: number
                 description: Recibe un segundo numero
               result:
                 type: number
                 description: Guarda el resultado de la operacion
           Error:
             type: object
             required:
               - id
               - result
             properties:
               id:
                 type: integer
                 format: int32
               result:
                 type: number

           Resultado:
             type: object
             properties:
               result:
                 type: number


       */END V3




       /***********V2 SWAGGER ****************


       openapi: 3.0.0
       #-----
       info:
         title: Calculadora
         description: calculadora
         version: 1.0.0
         termsOfService: 'http://swagger.io/terms/'
         #-----
         contact:
           email: otabora@outlook.es
         #-----
         license:
           name: Apache 2.0
           url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
         #-----
       servers:
         # Vert.X
         # Added by API Auto Mocking Plugin
         - description: SwaggerHub API Auto Mocking
           url: https://virtserver.swaggerhub.com/Sifponia/UsuaioApi/1.0.0
         - description: Vertx
           url: http://localhost:9090/calculadora
         #-----
       tags:
         - name: Calculadora
           description: Calculadora
         #-----
       paths:
         '/calculos':
           get:
             summary: Lista de calculos
             operationId: listaCalculosId
             tags:
               - Calculadora
             responses:
               '200':
                 description: Permitir listar el histÃ³rico de forma paginada
                 headers:
                   x-next:
                     description: A link to the next page of responses
                     schema:
                       type: string
                 content:
                   application/json:
                     schema:
                       $ref: '#/components/schemas/Calculadora'
               "400":
                 description: Bad Request
               "401":
                 description: Unauthorized
               "403":
                 description: Forbidden
               "500":
                 description: Internal Sever Error

         '/suma':
           post:
             summary: Recibe dos entradas un numero (x) y (y)
             operationId: sumaId
             tags:
               - Calculadora
             requestBody:
               content:
                 application/json:
                   schema:
                     $ref: '#/components/schemas/Resultado'
             responses:
               '200':
                 description: Successful operation
                 content:
                   application/json:
                     schema:
                       $ref: '#/components/schemas/Calculadora'

               '404':
                 description: Failed. Request not found
               '405':
                 description: Failed. Method Not Allowed

         '/resta':
           post:
             summary: recibe dos dos entradas un numero (x) y (y)
             operationId: restaId
             parameters:
               - in: query
                 name: x
                 description: number
                 required: true
                 schema:
                   type: number
               - in: query
                 name: y
                 description: x
                 required: true
                 schema:
                   type: number
             tags:
               - Calculadora
             requestBody:
               content:
                 application/json:
                   schema:
                     $ref: '#/components/schemas/Calculadora'
             responses:
               '200':
                 description: Successful operation
                 content:
                   application/json:
                     schema:
                       $ref: '#/components/schemas/Calculadora'
               '404':
                 description: Failed. Request not found
               '405':
                 description: Failed. Method Not Allowed

         '/calculos/{id}':
           get:
             summary: Permitir obtener histÃ³rico por ID
             operationId: mostrarPorId
             parameters:
               - name: id
                 in: path
                 required: true
                 example: 1
                 description: Recupera un ID de la operacion
                 schema:
                   type: number
             tags:
               - Calculadora
             responses:
               '200':
                 description: Expected response to a valid request
                 content:
                   application/json:
                     schema:
                       $ref: '#/components/schemas/Calculadora'
               '404':
                 description: Failed. Request not found
               '405':
                 description: Failed. Method Not Allowed
       components:
         schemas:
           Calculadora:
             type: object
             required:
               - x
               - y
             properties:
               id:
                 type: integer
                 format: int64
                 description: Id de identificaciÃ³n
                 example: 1
               x:
                 type: number
                 description: Recibe un primer numero
                 example: 1.50

               y:
                 type: number
                 description: Recibe un segundo numero
                 example: 1
               operacion:
                 type: number
                 description: Recibe el tipo de operacion
                 example: +
               result:
                 type: number
                 description: Guarda el resultado de la operacion
                 example: 2.50
           Resultado:
             type: object
             properties:
               result:
                 type: number
             example: 2.50


